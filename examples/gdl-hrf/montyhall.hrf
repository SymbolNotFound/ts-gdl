%% # The Monty Hall game in GDL

%% A game for one player and a host (played by the builtin random).
role(player)
role(random)

%% The doors are all initially closed.
init(closed(1))
init(closed(2))
init(closed(3))

init(step(1))

%%
%% The host's legal moves:
%%

legal(random, hide_car(Door)) :-
    true(step(1)) & true(closed(Door))

legal(random, open(Door)) :-
    true(step(2)) & true(closed(Door)) &
    not true(car(Door)) & not true(chosen(Door))

legal(random, noop) :- true(step(3))

%%
%% The player's legal moves
%%

legal(player, choose(Door)) :-
    true(step(1)) & true(closed(Door))

legal(player, noop) :- true(step(2))

legal(player, noop) :- true(step(3))
legal(player, switch) :- true(step(3))

%% Consequence of opening a door

sees(player, car) :- does(random, open(Door)) & true(car(Door))
sees(player, goat) :- does(random, open(Door)) & ~true(car(Door))

%% Consequences and side effects of actions

next(car(Door)) :- does(random, hide_car(Door))
next(car(Door)) :- true(car(Door))
next(closed(Door)) :-
    true(closed(Door)) & ~does(random, open(Door))

next(chosen(Door)) :- does(candidate, choose(Door))
next(chosen(Door)) :-
    true(chosen(Door)) & ~does(candidate, switch)

next(chosen(Door)) :-
    does(candidate, switch) & true(closed(Door)) & ~true(chosen(Door))

%% Progression of step sequence

next(step(2)) :- true(step(1))
next(step(3)) :- true(step(2))
next(step(4)) :- true(step(3))

%% termination & goal evaluation

% The game always ends in three steps
terminal :- true(step(4))

goal(player, 100) :- true(chosen(Door)) & true(car(Door))
goal(player, 0) :- true(chosen(Door)) & ~true(car(Door))
